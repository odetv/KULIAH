section	.text
	global _start       ;must be declared for using gcc
_start:                     ;tell linker entry point
    
    mov eax, 5
    add eax, 4
    mov ebx, eax
    add ebx, 48
    mov [mychar], ebx
    
	mov	eax, 4	    ;system call number (sys_write)
    mov	ebx, 1	    ;file descriptor (stdout)
    mov	ecx, mychar      ;message to write
	mov	edx,1    ;message length
	int	0x80        ;call kernel
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel

section	.data
mychar dd 0
msg	db	'Hello, world!',0xa	;our dear string
len	equ	$ - msg			;length of our dear string



-------------------------------------------------------------------------

section	.text
	global _start
_start:
    
    mov edx, 0
    mov eax, 2115101014 ;your number
    mov ecx, 10
    mov ebx, 0
l1: div ecx
    add edx, 48
    push edx
    inc ebx
    mov edx, 0
    cmp eax, 0
    jne l1
    mov	ecx, esp     ;message to write
    
    
l2:
    mov	eax, 4	    ;system call number (sys_write)
    mov	edx,1    ;message length
    push ebx
    mov	ebx, 1	    ;file descriptor (stdout)
	int	0x80        ;call kernel
	pop ebx
	dec ebx
	add ecx, 4
	cmp ebx, 0
	jne l2
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel

section	.data
mychar times 50 db 0
msg	db	'IMPLEMENTASI STACK',0xa	;our dear string
len	equ	$ - msg			;length of our dear string



-------------------------------------------------------------------------

section	.text
	global _start
_start:
    
    mov edx, 0
    mov eax, 2115101014 ;your number
    mov ecx, mychar
    pop ecx
    mov ebx, 0
    
l1: mov ecx, 10
    div ecx
    add edx, 48
    pop ecx
    mov [ecx], dl
    inc ecx
    push ecx
    inc ebx
    mov edx, 0
    cmp eax, 0
    jne l1
    pop	ecx
    dec ecx
    
l2: mov	eax, 4	    ;system call number (sys_write)
    mov	edx,1    ;message length
    push ebx
    mov	ebx, 1	    ;file descriptor (stdout)
	int	0x80        ;call kernel
	pop ebx
	dec ebx
	dec ecx
	cmp ebx, 0
	jne l2
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel

section	.data
mychar times 50 db 0
msg	db	'IMPLEMENTASI VARIABEL',0xa	;our dear string
len	equ	$ - msg			;length of our dear string
















section	.text
	global _start
_start:
    
    mov edx, 0
    mov eax, 2115101014 ;your number
    mov ecx, 10
    mov esi, mychar
    
l1:
    div ecx
    add edx, 48
    mov [esi], dl
    inc esi
    mov edx, 0
    cmp eax, 0
    jne l1
    
l2:
	dec esi
    mov	eax, 4	    ;system call number (sys_write)
    mov	ebx, 1	    ;file descriptor (stdout)
    mov ecx, esi
    mov	edx,1    ;message length

	int	0x80        ;call kernel
	cmp esi, mychar
	jne l2
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel

section	.data
mychar times 50 db 0
msg	db	'IMPLEMENTASI VARIABEL',0xa	;our dear string
len	equ	$ - msg			;length of our dear string